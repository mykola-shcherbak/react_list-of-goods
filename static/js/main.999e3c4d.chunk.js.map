{"version":3,"sources":["components/GoodsList/GoodsList.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["GoodsList","goods","sortBy","isReversed","newGoods","sort","good1","good2","localeCompare","length","reverse","className","map","good","key","Button","React","memo","callback","text","type","onClick","goodsFromServer","App","state","isStarted","start","setState","sortByLength","sortByName","reset","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uTAIaA,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACnCC,EAAW,YAAIH,GAAOI,MAAK,SAACC,EAAOC,GACvC,OAAQL,GACN,IAAK,WACH,OAAOI,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAQb,OAJIN,GACFC,EAASM,UAIT,wBAAIC,UAAU,QACXP,EAASQ,KAAI,SAAAC,GAAI,OAChB,wBAAIC,IAAKD,GACNA,SCpBEE,GDiCEC,IAAMC,KAAKjB,G,MCjCJ,SAAC,GAAD,IAAGkB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACpB,4BACEC,KAAK,SACLC,QAASH,EACTP,UAAU,UAETQ,KCLCG,GDcSN,IAAMC,KAAKF,GCdF,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6EaQ,E,4MAzEbC,MAAQ,CACNvB,MAAM,GAAD,OAAMqB,GACXG,WAAW,EACXtB,YAAY,EACZD,OAAQ,M,EAGVwB,MAAQ,WACN,EAAKC,UAAS,SAAAH,GAAK,MAAK,CACtBC,WAAYD,EAAMC,e,EAItBf,QAAU,WACR,EAAKiB,UAAS,SAAAH,GAAK,MAAK,CACtBrB,YAAaqB,EAAMrB,gB,EAIvByB,aAAe,WACb,EAAKD,UAAS,SAAAH,GAAK,MAAK,CACtBtB,OAAQ,c,EAIZ2B,WAAa,WACX,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBtB,OAAQ,gB,EAIZ4B,MAAQ,WACN,EAAKH,UAAS,SAAAH,GAAK,MAAK,CACtBvB,MAAM,GAAD,OAAMqB,GACXG,WAAW,EACXtB,YAAY,EACZD,OAAQ,U,4CAIZ,WACE,OACE,yBAAKS,UAAU,OACZoB,KAAKP,MAAMC,UACV,oCACE,wBAAId,UAAU,SAAd,SACA,kBAAC,EAAD,CACEV,MAAO8B,KAAKP,MAAMvB,MAClBC,OAAQ6B,KAAKP,MAAMtB,OACnBC,WAAY4B,KAAKP,MAAMrB,aAEzB,yBAAKQ,UAAU,WACb,kBAAC,EAAD,CAAQO,SAAUa,KAAKrB,QAASS,KAAK,YACrC,kBAAC,EAAD,CAAQD,SAAUa,KAAKH,aAAcT,KAAK,mBAC1C,kBAAC,EAAD,CAAQD,SAAUa,KAAKF,WAAYV,KAAK,yBACxC,kBAAC,EAAD,CAAQD,SAAUa,KAAKD,MAAOX,KAAK,aAKrC,4BACEC,KAAK,SACLC,QAASU,KAAKL,MACdf,UAAU,UAHZ,c,GA7DMK,IAAMgB,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.999e3c4d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport './GoodsList.css';\n\nexport const GoodsList = ({ goods, sortBy, isReversed }) => {\n  const newGoods = [...goods].sort((good1, good2) => {\n    switch (sortBy) {\n      case 'alphabet':\n        return good1.localeCompare(good2);\n      case 'length':\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    newGoods.reverse();\n  }\n\n  return (\n    <ul className=\"list\">\n      {newGoods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(string).isRequired,\n  sortBy: PropTypes.string.isRequired,\n  isReversed: PropTypes.bool.isRequired,\n};\n\nexport default React.memo(GoodsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nexport const Button = ({ callback, text }) => (\n  <button\n    type=\"button\"\n    onClick={callback}\n    className=\"button\"\n  >\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  callback: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Button);\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\nimport { Button } from './components/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    goods: [...goodsFromServer],\n    isStarted: false,\n    isReversed: false,\n    sortBy: null,\n  }\n\n  start = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      sortBy: 'length',\n    }));\n  };\n\n  sortByName = () => {\n    this.setState(state => ({\n      sortBy: 'alphabet',\n    }));\n  };\n\n  reset = () => {\n    this.setState(state => ({\n      goods: [...goodsFromServer],\n      isStarted: true,\n      isReversed: false,\n      sortBy: null,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isStarted ? (\n          <>\n            <h1 className=\"title\">Goods</h1>\n            <GoodsList\n              goods={this.state.goods}\n              sortBy={this.state.sortBy}\n              isReversed={this.state.isReversed}\n            />\n            <div className=\"buttons\">\n              <Button callback={this.reverse} text=\"Reverse\" />\n              <Button callback={this.sortByLength} text=\"Sort by length\" />\n              <Button callback={this.sortByName} text=\" Sort alphabetically\" />\n              <Button callback={this.reset} text=\" Reset\" />\n            </div>\n          </>\n        )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.start}\n              className=\"button\"\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}